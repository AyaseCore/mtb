//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MSAToolBox.LegacyServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemTemplate", Namespace="http://schemas.datacontract.org/2004/07/MSAToolBox.Legacy")]
    [System.SerializableAttribute()]
    public partial class ItemTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllowableClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllowableRaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmmoTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArcaneResistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArmorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ArmorDamageModifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BagFamilyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BlockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BondingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuyCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuyPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerSlotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float[] DamageMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float[] DamageMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] DamageSchoolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisenchantIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisplayIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FireResistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlagsExtraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FoodTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FrostResistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GemPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HolidayIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HolyResistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InventoryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemLimitCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LockIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxDurabilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxMoneyLootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinMoneyLootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NatureResistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RandomPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RandomSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RangedModRangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequiredCityRankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequiredDisenchantSkillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequiredHonorRankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequiredLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequiredReputationFactionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequiredReputationRankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequiredSkillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequiredSkillRankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequiredSpellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScalingStatDistributionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScalingStatValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScriptNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SellPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShadowResistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SheathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SocketBonusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SocketColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SocketContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SoundOverrideSubclassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SpellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SpellCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SpellCategoryCooldownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SpellChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SpellCooldownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float[] SpellPPMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SpellTriggerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StackableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartQuestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] StatTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] StatValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubclassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotemCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VerifiedBuildField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllowableClass {
            get {
                return this.AllowableClassField;
            }
            set {
                if ((this.AllowableClassField.Equals(value) != true)) {
                    this.AllowableClassField = value;
                    this.RaisePropertyChanged("AllowableClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllowableRace {
            get {
                return this.AllowableRaceField;
            }
            set {
                if ((this.AllowableRaceField.Equals(value) != true)) {
                    this.AllowableRaceField = value;
                    this.RaisePropertyChanged("AllowableRace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AmmoType {
            get {
                return this.AmmoTypeField;
            }
            set {
                if ((this.AmmoTypeField.Equals(value) != true)) {
                    this.AmmoTypeField = value;
                    this.RaisePropertyChanged("AmmoType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArcaneResistance {
            get {
                return this.ArcaneResistanceField;
            }
            set {
                if ((this.ArcaneResistanceField.Equals(value) != true)) {
                    this.ArcaneResistanceField = value;
                    this.RaisePropertyChanged("ArcaneResistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Area {
            get {
                return this.AreaField;
            }
            set {
                if ((this.AreaField.Equals(value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Armor {
            get {
                return this.ArmorField;
            }
            set {
                if ((this.ArmorField.Equals(value) != true)) {
                    this.ArmorField = value;
                    this.RaisePropertyChanged("Armor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ArmorDamageModifier {
            get {
                return this.ArmorDamageModifierField;
            }
            set {
                if ((this.ArmorDamageModifierField.Equals(value) != true)) {
                    this.ArmorDamageModifierField = value;
                    this.RaisePropertyChanged("ArmorDamageModifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BagFamily {
            get {
                return this.BagFamilyField;
            }
            set {
                if ((this.BagFamilyField.Equals(value) != true)) {
                    this.BagFamilyField = value;
                    this.RaisePropertyChanged("BagFamily");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Block {
            get {
                return this.BlockField;
            }
            set {
                if ((this.BlockField.Equals(value) != true)) {
                    this.BlockField = value;
                    this.RaisePropertyChanged("Block");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Bonding {
            get {
                return this.BondingField;
            }
            set {
                if ((this.BondingField.Equals(value) != true)) {
                    this.BondingField = value;
                    this.RaisePropertyChanged("Bonding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuyCount {
            get {
                return this.BuyCountField;
            }
            set {
                if ((this.BuyCountField.Equals(value) != true)) {
                    this.BuyCountField = value;
                    this.RaisePropertyChanged("BuyCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuyPrice {
            get {
                return this.BuyPriceField;
            }
            set {
                if ((this.BuyPriceField.Equals(value) != true)) {
                    this.BuyPriceField = value;
                    this.RaisePropertyChanged("BuyPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Class {
            get {
                return this.ClassField;
            }
            set {
                if ((this.ClassField.Equals(value) != true)) {
                    this.ClassField = value;
                    this.RaisePropertyChanged("Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerSlot {
            get {
                return this.ContainerSlotField;
            }
            set {
                if ((this.ContainerSlotField.Equals(value) != true)) {
                    this.ContainerSlotField = value;
                    this.RaisePropertyChanged("ContainerSlot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomFlags {
            get {
                return this.CustomFlagsField;
            }
            set {
                if ((this.CustomFlagsField.Equals(value) != true)) {
                    this.CustomFlagsField = value;
                    this.RaisePropertyChanged("CustomFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float[] DamageMax {
            get {
                return this.DamageMaxField;
            }
            set {
                if ((object.ReferenceEquals(this.DamageMaxField, value) != true)) {
                    this.DamageMaxField = value;
                    this.RaisePropertyChanged("DamageMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float[] DamageMin {
            get {
                return this.DamageMinField;
            }
            set {
                if ((object.ReferenceEquals(this.DamageMinField, value) != true)) {
                    this.DamageMinField = value;
                    this.RaisePropertyChanged("DamageMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] DamageSchool {
            get {
                return this.DamageSchoolField;
            }
            set {
                if ((object.ReferenceEquals(this.DamageSchoolField, value) != true)) {
                    this.DamageSchoolField = value;
                    this.RaisePropertyChanged("DamageSchool");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisenchantID {
            get {
                return this.DisenchantIDField;
            }
            set {
                if ((this.DisenchantIDField.Equals(value) != true)) {
                    this.DisenchantIDField = value;
                    this.RaisePropertyChanged("DisenchantID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayID {
            get {
                return this.DisplayIDField;
            }
            set {
                if ((this.DisplayIDField.Equals(value) != true)) {
                    this.DisplayIDField = value;
                    this.RaisePropertyChanged("DisplayID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entry {
            get {
                return this.EntryField;
            }
            set {
                if ((this.EntryField.Equals(value) != true)) {
                    this.EntryField = value;
                    this.RaisePropertyChanged("Entry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FireResistance {
            get {
                return this.FireResistanceField;
            }
            set {
                if ((this.FireResistanceField.Equals(value) != true)) {
                    this.FireResistanceField = value;
                    this.RaisePropertyChanged("FireResistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Flags {
            get {
                return this.FlagsField;
            }
            set {
                if ((this.FlagsField.Equals(value) != true)) {
                    this.FlagsField = value;
                    this.RaisePropertyChanged("Flags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlagsExtra {
            get {
                return this.FlagsExtraField;
            }
            set {
                if ((this.FlagsExtraField.Equals(value) != true)) {
                    this.FlagsExtraField = value;
                    this.RaisePropertyChanged("FlagsExtra");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FoodType {
            get {
                return this.FoodTypeField;
            }
            set {
                if ((this.FoodTypeField.Equals(value) != true)) {
                    this.FoodTypeField = value;
                    this.RaisePropertyChanged("FoodType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FrostResistance {
            get {
                return this.FrostResistanceField;
            }
            set {
                if ((this.FrostResistanceField.Equals(value) != true)) {
                    this.FrostResistanceField = value;
                    this.RaisePropertyChanged("FrostResistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GemProperty {
            get {
                return this.GemPropertyField;
            }
            set {
                if ((this.GemPropertyField.Equals(value) != true)) {
                    this.GemPropertyField = value;
                    this.RaisePropertyChanged("GemProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HolidayID {
            get {
                return this.HolidayIDField;
            }
            set {
                if ((this.HolidayIDField.Equals(value) != true)) {
                    this.HolidayIDField = value;
                    this.RaisePropertyChanged("HolidayID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HolyResistance {
            get {
                return this.HolyResistanceField;
            }
            set {
                if ((this.HolyResistanceField.Equals(value) != true)) {
                    this.HolyResistanceField = value;
                    this.RaisePropertyChanged("HolyResistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InventoryType {
            get {
                return this.InventoryTypeField;
            }
            set {
                if ((this.InventoryTypeField.Equals(value) != true)) {
                    this.InventoryTypeField = value;
                    this.RaisePropertyChanged("InventoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemLevel {
            get {
                return this.ItemLevelField;
            }
            set {
                if ((this.ItemLevelField.Equals(value) != true)) {
                    this.ItemLevelField = value;
                    this.RaisePropertyChanged("ItemLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemLimitCategory {
            get {
                return this.ItemLimitCategoryField;
            }
            set {
                if ((this.ItemLimitCategoryField.Equals(value) != true)) {
                    this.ItemLimitCategoryField = value;
                    this.RaisePropertyChanged("ItemLimitCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemSet {
            get {
                return this.ItemSetField;
            }
            set {
                if ((this.ItemSetField.Equals(value) != true)) {
                    this.ItemSetField = value;
                    this.RaisePropertyChanged("ItemSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LockID {
            get {
                return this.LockIDField;
            }
            set {
                if ((this.LockIDField.Equals(value) != true)) {
                    this.LockIDField = value;
                    this.RaisePropertyChanged("LockID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Map {
            get {
                return this.MapField;
            }
            set {
                if ((this.MapField.Equals(value) != true)) {
                    this.MapField = value;
                    this.RaisePropertyChanged("Map");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Material {
            get {
                return this.MaterialField;
            }
            set {
                if ((this.MaterialField.Equals(value) != true)) {
                    this.MaterialField = value;
                    this.RaisePropertyChanged("Material");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxCount {
            get {
                return this.MaxCountField;
            }
            set {
                if ((this.MaxCountField.Equals(value) != true)) {
                    this.MaxCountField = value;
                    this.RaisePropertyChanged("MaxCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxDurability {
            get {
                return this.MaxDurabilityField;
            }
            set {
                if ((this.MaxDurabilityField.Equals(value) != true)) {
                    this.MaxDurabilityField = value;
                    this.RaisePropertyChanged("MaxDurability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxMoneyLoot {
            get {
                return this.MaxMoneyLootField;
            }
            set {
                if ((this.MaxMoneyLootField.Equals(value) != true)) {
                    this.MaxMoneyLootField = value;
                    this.RaisePropertyChanged("MaxMoneyLoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinMoneyLoot {
            get {
                return this.MinMoneyLootField;
            }
            set {
                if ((this.MinMoneyLootField.Equals(value) != true)) {
                    this.MinMoneyLootField = value;
                    this.RaisePropertyChanged("MinMoneyLoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NatureResistance {
            get {
                return this.NatureResistanceField;
            }
            set {
                if ((this.NatureResistanceField.Equals(value) != true)) {
                    this.NatureResistanceField = value;
                    this.RaisePropertyChanged("NatureResistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageMaterial {
            get {
                return this.PageMaterialField;
            }
            set {
                if ((this.PageMaterialField.Equals(value) != true)) {
                    this.PageMaterialField = value;
                    this.RaisePropertyChanged("PageMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageText {
            get {
                return this.PageTextField;
            }
            set {
                if ((this.PageTextField.Equals(value) != true)) {
                    this.PageTextField = value;
                    this.RaisePropertyChanged("PageText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RandomProperty {
            get {
                return this.RandomPropertyField;
            }
            set {
                if ((this.RandomPropertyField.Equals(value) != true)) {
                    this.RandomPropertyField = value;
                    this.RaisePropertyChanged("RandomProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RandomSuffix {
            get {
                return this.RandomSuffixField;
            }
            set {
                if ((this.RandomSuffixField.Equals(value) != true)) {
                    this.RandomSuffixField = value;
                    this.RaisePropertyChanged("RandomSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float RangedModRange {
            get {
                return this.RangedModRangeField;
            }
            set {
                if ((this.RangedModRangeField.Equals(value) != true)) {
                    this.RangedModRangeField = value;
                    this.RaisePropertyChanged("RangedModRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequiredCityRank {
            get {
                return this.RequiredCityRankField;
            }
            set {
                if ((this.RequiredCityRankField.Equals(value) != true)) {
                    this.RequiredCityRankField = value;
                    this.RaisePropertyChanged("RequiredCityRank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequiredDisenchantSkill {
            get {
                return this.RequiredDisenchantSkillField;
            }
            set {
                if ((this.RequiredDisenchantSkillField.Equals(value) != true)) {
                    this.RequiredDisenchantSkillField = value;
                    this.RaisePropertyChanged("RequiredDisenchantSkill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequiredHonorRank {
            get {
                return this.RequiredHonorRankField;
            }
            set {
                if ((this.RequiredHonorRankField.Equals(value) != true)) {
                    this.RequiredHonorRankField = value;
                    this.RaisePropertyChanged("RequiredHonorRank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequiredLevel {
            get {
                return this.RequiredLevelField;
            }
            set {
                if ((this.RequiredLevelField.Equals(value) != true)) {
                    this.RequiredLevelField = value;
                    this.RaisePropertyChanged("RequiredLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequiredReputationFaction {
            get {
                return this.RequiredReputationFactionField;
            }
            set {
                if ((this.RequiredReputationFactionField.Equals(value) != true)) {
                    this.RequiredReputationFactionField = value;
                    this.RaisePropertyChanged("RequiredReputationFaction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequiredReputationRank {
            get {
                return this.RequiredReputationRankField;
            }
            set {
                if ((this.RequiredReputationRankField.Equals(value) != true)) {
                    this.RequiredReputationRankField = value;
                    this.RaisePropertyChanged("RequiredReputationRank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequiredSkill {
            get {
                return this.RequiredSkillField;
            }
            set {
                if ((this.RequiredSkillField.Equals(value) != true)) {
                    this.RequiredSkillField = value;
                    this.RaisePropertyChanged("RequiredSkill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequiredSkillRank {
            get {
                return this.RequiredSkillRankField;
            }
            set {
                if ((this.RequiredSkillRankField.Equals(value) != true)) {
                    this.RequiredSkillRankField = value;
                    this.RaisePropertyChanged("RequiredSkillRank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequiredSpell {
            get {
                return this.RequiredSpellField;
            }
            set {
                if ((this.RequiredSpellField.Equals(value) != true)) {
                    this.RequiredSpellField = value;
                    this.RaisePropertyChanged("RequiredSpell");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScalingStatDistribution {
            get {
                return this.ScalingStatDistributionField;
            }
            set {
                if ((this.ScalingStatDistributionField.Equals(value) != true)) {
                    this.ScalingStatDistributionField = value;
                    this.RaisePropertyChanged("ScalingStatDistribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScalingStatValue {
            get {
                return this.ScalingStatValueField;
            }
            set {
                if ((this.ScalingStatValueField.Equals(value) != true)) {
                    this.ScalingStatValueField = value;
                    this.RaisePropertyChanged("ScalingStatValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScriptName {
            get {
                return this.ScriptNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ScriptNameField, value) != true)) {
                    this.ScriptNameField = value;
                    this.RaisePropertyChanged("ScriptName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SellPrice {
            get {
                return this.SellPriceField;
            }
            set {
                if ((this.SellPriceField.Equals(value) != true)) {
                    this.SellPriceField = value;
                    this.RaisePropertyChanged("SellPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShadowResistance {
            get {
                return this.ShadowResistanceField;
            }
            set {
                if ((this.ShadowResistanceField.Equals(value) != true)) {
                    this.ShadowResistanceField = value;
                    this.RaisePropertyChanged("ShadowResistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sheath {
            get {
                return this.SheathField;
            }
            set {
                if ((this.SheathField.Equals(value) != true)) {
                    this.SheathField = value;
                    this.RaisePropertyChanged("Sheath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SocketBonus {
            get {
                return this.SocketBonusField;
            }
            set {
                if ((this.SocketBonusField.Equals(value) != true)) {
                    this.SocketBonusField = value;
                    this.RaisePropertyChanged("SocketBonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SocketColor {
            get {
                return this.SocketColorField;
            }
            set {
                if ((object.ReferenceEquals(this.SocketColorField, value) != true)) {
                    this.SocketColorField = value;
                    this.RaisePropertyChanged("SocketColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SocketContent {
            get {
                return this.SocketContentField;
            }
            set {
                if ((object.ReferenceEquals(this.SocketContentField, value) != true)) {
                    this.SocketContentField = value;
                    this.RaisePropertyChanged("SocketContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SoundOverrideSubclass {
            get {
                return this.SoundOverrideSubclassField;
            }
            set {
                if ((this.SoundOverrideSubclassField.Equals(value) != true)) {
                    this.SoundOverrideSubclassField = value;
                    this.RaisePropertyChanged("SoundOverrideSubclass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Spell {
            get {
                return this.SpellField;
            }
            set {
                if ((object.ReferenceEquals(this.SpellField, value) != true)) {
                    this.SpellField = value;
                    this.RaisePropertyChanged("Spell");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SpellCategory {
            get {
                return this.SpellCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SpellCategoryField, value) != true)) {
                    this.SpellCategoryField = value;
                    this.RaisePropertyChanged("SpellCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SpellCategoryCooldown {
            get {
                return this.SpellCategoryCooldownField;
            }
            set {
                if ((object.ReferenceEquals(this.SpellCategoryCooldownField, value) != true)) {
                    this.SpellCategoryCooldownField = value;
                    this.RaisePropertyChanged("SpellCategoryCooldown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SpellCharges {
            get {
                return this.SpellChargesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpellChargesField, value) != true)) {
                    this.SpellChargesField = value;
                    this.RaisePropertyChanged("SpellCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SpellCooldown {
            get {
                return this.SpellCooldownField;
            }
            set {
                if ((object.ReferenceEquals(this.SpellCooldownField, value) != true)) {
                    this.SpellCooldownField = value;
                    this.RaisePropertyChanged("SpellCooldown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float[] SpellPPM {
            get {
                return this.SpellPPMField;
            }
            set {
                if ((object.ReferenceEquals(this.SpellPPMField, value) != true)) {
                    this.SpellPPMField = value;
                    this.RaisePropertyChanged("SpellPPM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SpellTrigger {
            get {
                return this.SpellTriggerField;
            }
            set {
                if ((object.ReferenceEquals(this.SpellTriggerField, value) != true)) {
                    this.SpellTriggerField = value;
                    this.RaisePropertyChanged("SpellTrigger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stackable {
            get {
                return this.StackableField;
            }
            set {
                if ((this.StackableField.Equals(value) != true)) {
                    this.StackableField = value;
                    this.RaisePropertyChanged("Stackable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartQuest {
            get {
                return this.StartQuestField;
            }
            set {
                if ((this.StartQuestField.Equals(value) != true)) {
                    this.StartQuestField = value;
                    this.RaisePropertyChanged("StartQuest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] StatType {
            get {
                return this.StatTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatTypeField, value) != true)) {
                    this.StatTypeField = value;
                    this.RaisePropertyChanged("StatType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] StatValue {
            get {
                return this.StatValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StatValueField, value) != true)) {
                    this.StatValueField = value;
                    this.RaisePropertyChanged("StatValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatsCount {
            get {
                return this.StatsCountField;
            }
            set {
                if ((this.StatsCountField.Equals(value) != true)) {
                    this.StatsCountField = value;
                    this.RaisePropertyChanged("StatsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Subclass {
            get {
                return this.SubclassField;
            }
            set {
                if ((this.SubclassField.Equals(value) != true)) {
                    this.SubclassField = value;
                    this.RaisePropertyChanged("Subclass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotemCategory {
            get {
                return this.TotemCategoryField;
            }
            set {
                if ((this.TotemCategoryField.Equals(value) != true)) {
                    this.TotemCategoryField = value;
                    this.RaisePropertyChanged("TotemCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VerifiedBuild {
            get {
                return this.VerifiedBuildField;
            }
            set {
                if ((this.VerifiedBuildField.Equals(value) != true)) {
                    this.VerifiedBuildField = value;
                    this.RaisePropertyChanged("VerifiedBuild");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataDefineStore", Namespace="http://schemas.datacontract.org/2004/07/MSAToolBox.Legacy")]
    [System.SerializableAttribute()]
    public partial class DataDefineStore : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> HolidayNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> ItemAmmoTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> ItemBagFamilyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> ItemBondingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> ItemClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> ItemDamageSchoolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> ItemInventoryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> ItemMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> ItemPetFoodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> ItemQualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> ItemSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> ItemSheathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> ItemSocketColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> ItemSpellTriggerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> ItemStatTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string>[] ItemSubclassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> PageTextMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> ReputationRankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> SkillLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> SpellDispelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> SpellIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> SpellMechanicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> TotemCategoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> HolidayNames {
            get {
                return this.HolidayNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.HolidayNamesField, value) != true)) {
                    this.HolidayNamesField = value;
                    this.RaisePropertyChanged("HolidayNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> ItemAmmoType {
            get {
                return this.ItemAmmoTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemAmmoTypeField, value) != true)) {
                    this.ItemAmmoTypeField = value;
                    this.RaisePropertyChanged("ItemAmmoType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> ItemBagFamily {
            get {
                return this.ItemBagFamilyField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemBagFamilyField, value) != true)) {
                    this.ItemBagFamilyField = value;
                    this.RaisePropertyChanged("ItemBagFamily");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> ItemBonding {
            get {
                return this.ItemBondingField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemBondingField, value) != true)) {
                    this.ItemBondingField = value;
                    this.RaisePropertyChanged("ItemBonding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> ItemClass {
            get {
                return this.ItemClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemClassField, value) != true)) {
                    this.ItemClassField = value;
                    this.RaisePropertyChanged("ItemClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> ItemDamageSchool {
            get {
                return this.ItemDamageSchoolField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDamageSchoolField, value) != true)) {
                    this.ItemDamageSchoolField = value;
                    this.RaisePropertyChanged("ItemDamageSchool");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> ItemInventoryType {
            get {
                return this.ItemInventoryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemInventoryTypeField, value) != true)) {
                    this.ItemInventoryTypeField = value;
                    this.RaisePropertyChanged("ItemInventoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> ItemMaterial {
            get {
                return this.ItemMaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemMaterialField, value) != true)) {
                    this.ItemMaterialField = value;
                    this.RaisePropertyChanged("ItemMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> ItemPetFood {
            get {
                return this.ItemPetFoodField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemPetFoodField, value) != true)) {
                    this.ItemPetFoodField = value;
                    this.RaisePropertyChanged("ItemPetFood");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> ItemQuality {
            get {
                return this.ItemQualityField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemQualityField, value) != true)) {
                    this.ItemQualityField = value;
                    this.RaisePropertyChanged("ItemQuality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> ItemSet {
            get {
                return this.ItemSetField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemSetField, value) != true)) {
                    this.ItemSetField = value;
                    this.RaisePropertyChanged("ItemSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> ItemSheath {
            get {
                return this.ItemSheathField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemSheathField, value) != true)) {
                    this.ItemSheathField = value;
                    this.RaisePropertyChanged("ItemSheath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> ItemSocketColor {
            get {
                return this.ItemSocketColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemSocketColorField, value) != true)) {
                    this.ItemSocketColorField = value;
                    this.RaisePropertyChanged("ItemSocketColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> ItemSpellTrigger {
            get {
                return this.ItemSpellTriggerField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemSpellTriggerField, value) != true)) {
                    this.ItemSpellTriggerField = value;
                    this.RaisePropertyChanged("ItemSpellTrigger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> ItemStatType {
            get {
                return this.ItemStatTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemStatTypeField, value) != true)) {
                    this.ItemStatTypeField = value;
                    this.RaisePropertyChanged("ItemStatType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string>[] ItemSubclass {
            get {
                return this.ItemSubclassField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemSubclassField, value) != true)) {
                    this.ItemSubclassField = value;
                    this.RaisePropertyChanged("ItemSubclass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> PageTextMaterial {
            get {
                return this.PageTextMaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.PageTextMaterialField, value) != true)) {
                    this.PageTextMaterialField = value;
                    this.RaisePropertyChanged("PageTextMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> ReputationRank {
            get {
                return this.ReputationRankField;
            }
            set {
                if ((object.ReferenceEquals(this.ReputationRankField, value) != true)) {
                    this.ReputationRankField = value;
                    this.RaisePropertyChanged("ReputationRank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> SkillLine {
            get {
                return this.SkillLineField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillLineField, value) != true)) {
                    this.SkillLineField = value;
                    this.RaisePropertyChanged("SkillLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> SpellDispel {
            get {
                return this.SpellDispelField;
            }
            set {
                if ((object.ReferenceEquals(this.SpellDispelField, value) != true)) {
                    this.SpellDispelField = value;
                    this.RaisePropertyChanged("SpellDispel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> SpellIcon {
            get {
                return this.SpellIconField;
            }
            set {
                if ((object.ReferenceEquals(this.SpellIconField, value) != true)) {
                    this.SpellIconField = value;
                    this.RaisePropertyChanged("SpellIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> SpellMechanic {
            get {
                return this.SpellMechanicField;
            }
            set {
                if ((object.ReferenceEquals(this.SpellMechanicField, value) != true)) {
                    this.SpellMechanicField = value;
                    this.RaisePropertyChanged("SpellMechanic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> TotemCategory {
            get {
                return this.TotemCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.TotemCategoryField, value) != true)) {
                    this.TotemCategoryField = value;
                    this.RaisePropertyChanged("TotemCategory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemInfo", Namespace="http://schemas.datacontract.org/2004/07/MSAToolBox.Legacy")]
    [System.SerializableAttribute()]
    public partial class ItemInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubClassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Class {
            get {
                return this.ClassField;
            }
            set {
                if ((this.ClassField.Equals(value) != true)) {
                    this.ClassField = value;
                    this.RaisePropertyChanged("Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entry {
            get {
                return this.EntryField;
            }
            set {
                if ((this.EntryField.Equals(value) != true)) {
                    this.EntryField = value;
                    this.RaisePropertyChanged("Entry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubClass {
            get {
                return this.SubClassField;
            }
            set {
                if ((this.SubClassField.Equals(value) != true)) {
                    this.SubClassField = value;
                    this.RaisePropertyChanged("SubClass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemDBC", Namespace="http://schemas.datacontract.org/2004/07/MSAToolBox.Legacy")]
    [System.SerializableAttribute()]
    public partial class ItemDBC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisplayIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InventoryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SheathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SoundOverrideSubClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubClassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Class {
            get {
                return this.ClassField;
            }
            set {
                if ((this.ClassField.Equals(value) != true)) {
                    this.ClassField = value;
                    this.RaisePropertyChanged("Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayID {
            get {
                return this.DisplayIDField;
            }
            set {
                if ((this.DisplayIDField.Equals(value) != true)) {
                    this.DisplayIDField = value;
                    this.RaisePropertyChanged("DisplayID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entry {
            get {
                return this.EntryField;
            }
            set {
                if ((this.EntryField.Equals(value) != true)) {
                    this.EntryField = value;
                    this.RaisePropertyChanged("Entry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InventoryType {
            get {
                return this.InventoryTypeField;
            }
            set {
                if ((this.InventoryTypeField.Equals(value) != true)) {
                    this.InventoryTypeField = value;
                    this.RaisePropertyChanged("InventoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Material {
            get {
                return this.MaterialField;
            }
            set {
                if ((this.MaterialField.Equals(value) != true)) {
                    this.MaterialField = value;
                    this.RaisePropertyChanged("Material");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sheath {
            get {
                return this.SheathField;
            }
            set {
                if ((this.SheathField.Equals(value) != true)) {
                    this.SheathField = value;
                    this.RaisePropertyChanged("Sheath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SoundOverrideSubClass {
            get {
                return this.SoundOverrideSubClassField;
            }
            set {
                if ((this.SoundOverrideSubClassField.Equals(value) != true)) {
                    this.SoundOverrideSubClassField = value;
                    this.RaisePropertyChanged("SoundOverrideSubClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubClass {
            get {
                return this.SubClassField;
            }
            set {
                if ((this.SubClassField.Equals(value) != true)) {
                    this.SubClassField = value;
                    this.RaisePropertyChanged("SubClass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GossipMenu", Namespace="http://schemas.datacontract.org/2004/07/MSAToolBox.Legacy")]
    [System.SerializableAttribute()]
    public partial class GossipMenu : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Emote1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Emote2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Emote3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NpcTextFemaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NpcTextIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NpcTextLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NpcTextMaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MSAToolBox.LegacyServices.GossipMenuOption[] OptionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Emote1 {
            get {
                return this.Emote1Field;
            }
            set {
                if ((this.Emote1Field.Equals(value) != true)) {
                    this.Emote1Field = value;
                    this.RaisePropertyChanged("Emote1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Emote2 {
            get {
                return this.Emote2Field;
            }
            set {
                if ((this.Emote2Field.Equals(value) != true)) {
                    this.Emote2Field = value;
                    this.RaisePropertyChanged("Emote2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Emote3 {
            get {
                return this.Emote3Field;
            }
            set {
                if ((this.Emote3Field.Equals(value) != true)) {
                    this.Emote3Field = value;
                    this.RaisePropertyChanged("Emote3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NpcTextFemale {
            get {
                return this.NpcTextFemaleField;
            }
            set {
                if ((object.ReferenceEquals(this.NpcTextFemaleField, value) != true)) {
                    this.NpcTextFemaleField = value;
                    this.RaisePropertyChanged("NpcTextFemale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NpcTextID {
            get {
                return this.NpcTextIDField;
            }
            set {
                if ((this.NpcTextIDField.Equals(value) != true)) {
                    this.NpcTextIDField = value;
                    this.RaisePropertyChanged("NpcTextID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NpcTextLanguage {
            get {
                return this.NpcTextLanguageField;
            }
            set {
                if ((this.NpcTextLanguageField.Equals(value) != true)) {
                    this.NpcTextLanguageField = value;
                    this.RaisePropertyChanged("NpcTextLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NpcTextMale {
            get {
                return this.NpcTextMaleField;
            }
            set {
                if ((object.ReferenceEquals(this.NpcTextMaleField, value) != true)) {
                    this.NpcTextMaleField = value;
                    this.RaisePropertyChanged("NpcTextMale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MSAToolBox.LegacyServices.GossipMenuOption[] Options {
            get {
                return this.OptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionsField, value) != true)) {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GossipMenuOption", Namespace="http://schemas.datacontract.org/2004/07/MSAToolBox.Legacy")]
    [System.SerializableAttribute()]
    public partial class GossipMenuOption : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionPOIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BoxBroadcastTextIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BoxMoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NpcFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OptionBroadcastTextIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowCodeBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SingleTimeCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionMenu {
            get {
                return this.ActionMenuField;
            }
            set {
                if ((this.ActionMenuField.Equals(value) != true)) {
                    this.ActionMenuField = value;
                    this.RaisePropertyChanged("ActionMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionPOI {
            get {
                return this.ActionPOIField;
            }
            set {
                if ((this.ActionPOIField.Equals(value) != true)) {
                    this.ActionPOIField = value;
                    this.RaisePropertyChanged("ActionPOI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BoxBroadcastTextID {
            get {
                return this.BoxBroadcastTextIDField;
            }
            set {
                if ((this.BoxBroadcastTextIDField.Equals(value) != true)) {
                    this.BoxBroadcastTextIDField = value;
                    this.RaisePropertyChanged("BoxBroadcastTextID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BoxMoney {
            get {
                return this.BoxMoneyField;
            }
            set {
                if ((this.BoxMoneyField.Equals(value) != true)) {
                    this.BoxMoneyField = value;
                    this.RaisePropertyChanged("BoxMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxText {
            get {
                return this.BoxTextField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxTextField, value) != true)) {
                    this.BoxTextField = value;
                    this.RaisePropertyChanged("BoxText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Icon {
            get {
                return this.IconField;
            }
            set {
                if ((this.IconField.Equals(value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NpcFlags {
            get {
                return this.NpcFlagsField;
            }
            set {
                if ((this.NpcFlagsField.Equals(value) != true)) {
                    this.NpcFlagsField = value;
                    this.RaisePropertyChanged("NpcFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OptionBroadcastTextID {
            get {
                return this.OptionBroadcastTextIDField;
            }
            set {
                if ((this.OptionBroadcastTextIDField.Equals(value) != true)) {
                    this.OptionBroadcastTextIDField = value;
                    this.RaisePropertyChanged("OptionBroadcastTextID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowCodeBox {
            get {
                return this.ShowCodeBoxField;
            }
            set {
                if ((this.ShowCodeBoxField.Equals(value) != true)) {
                    this.ShowCodeBoxField = value;
                    this.RaisePropertyChanged("ShowCodeBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SingleTimeCheck {
            get {
                return this.SingleTimeCheckField;
            }
            set {
                if ((this.SingleTimeCheckField.Equals(value) != true)) {
                    this.SingleTimeCheckField = value;
                    this.RaisePropertyChanged("SingleTimeCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VendorInfo", Namespace="http://schemas.datacontract.org/2004/07/MSAToolBox.Legacy")]
    [System.SerializableAttribute()]
    public partial class VendorInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExtendedCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IncrTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MaxCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelatedToStageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SlotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StageLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> VerifiedBuildField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExtendedCost {
            get {
                return this.ExtendedCostField;
            }
            set {
                if ((this.ExtendedCostField.Equals(value) != true)) {
                    this.ExtendedCostField = value;
                    this.RaisePropertyChanged("ExtendedCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IncrTime {
            get {
                return this.IncrTimeField;
            }
            set {
                if ((this.IncrTimeField.Equals(value) != true)) {
                    this.IncrTimeField = value;
                    this.RaisePropertyChanged("IncrTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Item {
            get {
                return this.ItemField;
            }
            set {
                if ((this.ItemField.Equals(value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MaxCount {
            get {
                return this.MaxCountField;
            }
            set {
                if ((this.MaxCountField.Equals(value) != true)) {
                    this.MaxCountField = value;
                    this.RaisePropertyChanged("MaxCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelatedToStage {
            get {
                return this.RelatedToStageField;
            }
            set {
                if ((this.RelatedToStageField.Equals(value) != true)) {
                    this.RelatedToStageField = value;
                    this.RaisePropertyChanged("RelatedToStage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Slot {
            get {
                return this.SlotField;
            }
            set {
                if ((this.SlotField.Equals(value) != true)) {
                    this.SlotField = value;
                    this.RaisePropertyChanged("Slot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StageLevel {
            get {
                return this.StageLevelField;
            }
            set {
                if ((this.StageLevelField.Equals(value) != true)) {
                    this.StageLevelField = value;
                    this.RaisePropertyChanged("StageLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> VerifiedBuild {
            get {
                return this.VerifiedBuildField;
            }
            set {
                if ((this.VerifiedBuildField.Equals(value) != true)) {
                    this.VerifiedBuildField = value;
                    this.RaisePropertyChanged("VerifiedBuild");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreatureTemplate", Namespace="http://schemas.datacontract.org/2004/07/MSAToolBox.Legacy")]
    [System.SerializableAttribute()]
    public partial class CreatureTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AINameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ArmorModifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BaseAttackTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BaseVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float DamageModifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte DamageSchoolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DynamicFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] EntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ExpansionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ExperienceModifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ExtraFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FactionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte FamilyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GossipMenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float HealthModifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float HoverHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte InhabitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRacialLeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] KillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LootIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ManaModifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MaxLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxMoneyLootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MechanicImmuneMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MinLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinMoneyLootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MovementIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MovementTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long NpcFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PetSpellDataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PickpocketLootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] QuestItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RangedAttackTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RangedVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RegenerateHealthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short[] ResistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ScaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScriptNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SkinLootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SpeedRunField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SpeedWalkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SpellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TrainerClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TrainerRaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrainerSpellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte TrainerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TypeFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte UnitClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UnitFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UnitFlags2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VehicleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> VerifiedBuildField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AIName {
            get {
                return this.AINameField;
            }
            set {
                if ((object.ReferenceEquals(this.AINameField, value) != true)) {
                    this.AINameField = value;
                    this.RaisePropertyChanged("AIName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ArmorModifier {
            get {
                return this.ArmorModifierField;
            }
            set {
                if ((this.ArmorModifierField.Equals(value) != true)) {
                    this.ArmorModifierField = value;
                    this.RaisePropertyChanged("ArmorModifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BaseAttackTime {
            get {
                return this.BaseAttackTimeField;
            }
            set {
                if ((this.BaseAttackTimeField.Equals(value) != true)) {
                    this.BaseAttackTimeField = value;
                    this.RaisePropertyChanged("BaseAttackTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float BaseVariance {
            get {
                return this.BaseVarianceField;
            }
            set {
                if ((this.BaseVarianceField.Equals(value) != true)) {
                    this.BaseVarianceField = value;
                    this.RaisePropertyChanged("BaseVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float DamageModifier {
            get {
                return this.DamageModifierField;
            }
            set {
                if ((this.DamageModifierField.Equals(value) != true)) {
                    this.DamageModifierField = value;
                    this.RaisePropertyChanged("DamageModifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte DamageSchool {
            get {
                return this.DamageSchoolField;
            }
            set {
                if ((this.DamageSchoolField.Equals(value) != true)) {
                    this.DamageSchoolField = value;
                    this.RaisePropertyChanged("DamageSchool");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DynamicFlags {
            get {
                return this.DynamicFlagsField;
            }
            set {
                if ((this.DynamicFlagsField.Equals(value) != true)) {
                    this.DynamicFlagsField = value;
                    this.RaisePropertyChanged("DynamicFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Entry {
            get {
                return this.EntryField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryField, value) != true)) {
                    this.EntryField = value;
                    this.RaisePropertyChanged("Entry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Expansion {
            get {
                return this.ExpansionField;
            }
            set {
                if ((this.ExpansionField.Equals(value) != true)) {
                    this.ExpansionField = value;
                    this.RaisePropertyChanged("Expansion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ExperienceModifier {
            get {
                return this.ExperienceModifierField;
            }
            set {
                if ((this.ExperienceModifierField.Equals(value) != true)) {
                    this.ExperienceModifierField = value;
                    this.RaisePropertyChanged("ExperienceModifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExtraFlags {
            get {
                return this.ExtraFlagsField;
            }
            set {
                if ((this.ExtraFlagsField.Equals(value) != true)) {
                    this.ExtraFlagsField = value;
                    this.RaisePropertyChanged("ExtraFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Faction {
            get {
                return this.FactionField;
            }
            set {
                if ((this.FactionField.Equals(value) != true)) {
                    this.FactionField = value;
                    this.RaisePropertyChanged("Faction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte Family {
            get {
                return this.FamilyField;
            }
            set {
                if ((this.FamilyField.Equals(value) != true)) {
                    this.FamilyField = value;
                    this.RaisePropertyChanged("Family");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GossipMenuID {
            get {
                return this.GossipMenuIDField;
            }
            set {
                if ((this.GossipMenuIDField.Equals(value) != true)) {
                    this.GossipMenuIDField = value;
                    this.RaisePropertyChanged("GossipMenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float HealthModifier {
            get {
                return this.HealthModifierField;
            }
            set {
                if ((this.HealthModifierField.Equals(value) != true)) {
                    this.HealthModifierField = value;
                    this.RaisePropertyChanged("HealthModifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float HoverHeight {
            get {
                return this.HoverHeightField;
            }
            set {
                if ((this.HoverHeightField.Equals(value) != true)) {
                    this.HoverHeightField = value;
                    this.RaisePropertyChanged("HoverHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IconName {
            get {
                return this.IconNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IconNameField, value) != true)) {
                    this.IconNameField = value;
                    this.RaisePropertyChanged("IconName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte InhabitType {
            get {
                return this.InhabitTypeField;
            }
            set {
                if ((this.InhabitTypeField.Equals(value) != true)) {
                    this.InhabitTypeField = value;
                    this.RaisePropertyChanged("InhabitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRacialLeader {
            get {
                return this.IsRacialLeaderField;
            }
            set {
                if ((this.IsRacialLeaderField.Equals(value) != true)) {
                    this.IsRacialLeaderField = value;
                    this.RaisePropertyChanged("IsRacialLeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] KillCredit {
            get {
                return this.KillCreditField;
            }
            set {
                if ((object.ReferenceEquals(this.KillCreditField, value) != true)) {
                    this.KillCreditField = value;
                    this.RaisePropertyChanged("KillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LootID {
            get {
                return this.LootIDField;
            }
            set {
                if ((this.LootIDField.Equals(value) != true)) {
                    this.LootIDField = value;
                    this.RaisePropertyChanged("LootID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ManaModifier {
            get {
                return this.ManaModifierField;
            }
            set {
                if ((this.ManaModifierField.Equals(value) != true)) {
                    this.ManaModifierField = value;
                    this.RaisePropertyChanged("ManaModifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MaxLevel {
            get {
                return this.MaxLevelField;
            }
            set {
                if ((this.MaxLevelField.Equals(value) != true)) {
                    this.MaxLevelField = value;
                    this.RaisePropertyChanged("MaxLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxMoneyLoot {
            get {
                return this.MaxMoneyLootField;
            }
            set {
                if ((this.MaxMoneyLootField.Equals(value) != true)) {
                    this.MaxMoneyLootField = value;
                    this.RaisePropertyChanged("MaxMoneyLoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MechanicImmuneMask {
            get {
                return this.MechanicImmuneMaskField;
            }
            set {
                if ((this.MechanicImmuneMaskField.Equals(value) != true)) {
                    this.MechanicImmuneMaskField = value;
                    this.RaisePropertyChanged("MechanicImmuneMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MinLevel {
            get {
                return this.MinLevelField;
            }
            set {
                if ((this.MinLevelField.Equals(value) != true)) {
                    this.MinLevelField = value;
                    this.RaisePropertyChanged("MinLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinMoneyLoot {
            get {
                return this.MinMoneyLootField;
            }
            set {
                if ((this.MinMoneyLootField.Equals(value) != true)) {
                    this.MinMoneyLootField = value;
                    this.RaisePropertyChanged("MinMoneyLoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MovementID {
            get {
                return this.MovementIDField;
            }
            set {
                if ((this.MovementIDField.Equals(value) != true)) {
                    this.MovementIDField = value;
                    this.RaisePropertyChanged("MovementID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MovementType {
            get {
                return this.MovementTypeField;
            }
            set {
                if ((this.MovementTypeField.Equals(value) != true)) {
                    this.MovementTypeField = value;
                    this.RaisePropertyChanged("MovementType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NpcFlags {
            get {
                return this.NpcFlagsField;
            }
            set {
                if ((this.NpcFlagsField.Equals(value) != true)) {
                    this.NpcFlagsField = value;
                    this.RaisePropertyChanged("NpcFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PetSpellDataID {
            get {
                return this.PetSpellDataIDField;
            }
            set {
                if ((this.PetSpellDataIDField.Equals(value) != true)) {
                    this.PetSpellDataIDField = value;
                    this.RaisePropertyChanged("PetSpellDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PickpocketLoot {
            get {
                return this.PickpocketLootField;
            }
            set {
                if ((this.PickpocketLootField.Equals(value) != true)) {
                    this.PickpocketLootField = value;
                    this.RaisePropertyChanged("PickpocketLoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] QuestItem {
            get {
                return this.QuestItemField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestItemField, value) != true)) {
                    this.QuestItemField = value;
                    this.RaisePropertyChanged("QuestItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RangedAttackTime {
            get {
                return this.RangedAttackTimeField;
            }
            set {
                if ((this.RangedAttackTimeField.Equals(value) != true)) {
                    this.RangedAttackTimeField = value;
                    this.RaisePropertyChanged("RangedAttackTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float RangedVariance {
            get {
                return this.RangedVarianceField;
            }
            set {
                if ((this.RangedVarianceField.Equals(value) != true)) {
                    this.RangedVarianceField = value;
                    this.RaisePropertyChanged("RangedVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RegenerateHealth {
            get {
                return this.RegenerateHealthField;
            }
            set {
                if ((this.RegenerateHealthField.Equals(value) != true)) {
                    this.RegenerateHealthField = value;
                    this.RaisePropertyChanged("RegenerateHealth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short[] Resistance {
            get {
                return this.ResistanceField;
            }
            set {
                if ((object.ReferenceEquals(this.ResistanceField, value) != true)) {
                    this.ResistanceField = value;
                    this.RaisePropertyChanged("Resistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Scale {
            get {
                return this.ScaleField;
            }
            set {
                if ((this.ScaleField.Equals(value) != true)) {
                    this.ScaleField = value;
                    this.RaisePropertyChanged("Scale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScriptName {
            get {
                return this.ScriptNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ScriptNameField, value) != true)) {
                    this.ScriptNameField = value;
                    this.RaisePropertyChanged("ScriptName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SkinLoot {
            get {
                return this.SkinLootField;
            }
            set {
                if ((this.SkinLootField.Equals(value) != true)) {
                    this.SkinLootField = value;
                    this.RaisePropertyChanged("SkinLoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SpeedRun {
            get {
                return this.SpeedRunField;
            }
            set {
                if ((this.SpeedRunField.Equals(value) != true)) {
                    this.SpeedRunField = value;
                    this.RaisePropertyChanged("SpeedRun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SpeedWalk {
            get {
                return this.SpeedWalkField;
            }
            set {
                if ((this.SpeedWalkField.Equals(value) != true)) {
                    this.SpeedWalkField = value;
                    this.RaisePropertyChanged("SpeedWalk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Spell {
            get {
                return this.SpellField;
            }
            set {
                if ((object.ReferenceEquals(this.SpellField, value) != true)) {
                    this.SpellField = value;
                    this.RaisePropertyChanged("Spell");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subname {
            get {
                return this.SubnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubnameField, value) != true)) {
                    this.SubnameField = value;
                    this.RaisePropertyChanged("Subname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TrainerClass {
            get {
                return this.TrainerClassField;
            }
            set {
                if ((this.TrainerClassField.Equals(value) != true)) {
                    this.TrainerClassField = value;
                    this.RaisePropertyChanged("TrainerClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TrainerRace {
            get {
                return this.TrainerRaceField;
            }
            set {
                if ((this.TrainerRaceField.Equals(value) != true)) {
                    this.TrainerRaceField = value;
                    this.RaisePropertyChanged("TrainerRace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrainerSpell {
            get {
                return this.TrainerSpellField;
            }
            set {
                if ((this.TrainerSpellField.Equals(value) != true)) {
                    this.TrainerSpellField = value;
                    this.RaisePropertyChanged("TrainerSpell");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte TrainerType {
            get {
                return this.TrainerTypeField;
            }
            set {
                if ((this.TrainerTypeField.Equals(value) != true)) {
                    this.TrainerTypeField = value;
                    this.RaisePropertyChanged("TrainerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TypeFlags {
            get {
                return this.TypeFlagsField;
            }
            set {
                if ((this.TypeFlagsField.Equals(value) != true)) {
                    this.TypeFlagsField = value;
                    this.RaisePropertyChanged("TypeFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte UnitClass {
            get {
                return this.UnitClassField;
            }
            set {
                if ((this.UnitClassField.Equals(value) != true)) {
                    this.UnitClassField = value;
                    this.RaisePropertyChanged("UnitClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UnitFlags {
            get {
                return this.UnitFlagsField;
            }
            set {
                if ((this.UnitFlagsField.Equals(value) != true)) {
                    this.UnitFlagsField = value;
                    this.RaisePropertyChanged("UnitFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UnitFlags2 {
            get {
                return this.UnitFlags2Field;
            }
            set {
                if ((this.UnitFlags2Field.Equals(value) != true)) {
                    this.UnitFlags2Field = value;
                    this.RaisePropertyChanged("UnitFlags2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((this.VehicleIDField.Equals(value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> VerifiedBuild {
            get {
                return this.VerifiedBuildField;
            }
            set {
                if ((this.VerifiedBuildField.Equals(value) != true)) {
                    this.VerifiedBuildField = value;
                    this.RaisePropertyChanged("VerifiedBuild");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreatureInfo", Namespace="http://schemas.datacontract.org/2004/07/MSAToolBox.Legacy")]
    [System.SerializableAttribute()]
    public partial class CreatureInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RankField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entry {
            get {
                return this.EntryField;
            }
            set {
                if ((this.EntryField.Equals(value) != true)) {
                    this.EntryField = value;
                    this.RaisePropertyChanged("Entry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxLevel {
            get {
                return this.MaxLevelField;
            }
            set {
                if ((this.MaxLevelField.Equals(value) != true)) {
                    this.MaxLevelField = value;
                    this.RaisePropertyChanged("MaxLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinLevel {
            get {
                return this.MinLevelField;
            }
            set {
                if ((this.MinLevelField.Equals(value) != true)) {
                    this.MinLevelField = value;
                    this.RaisePropertyChanged("MinLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Creature", Namespace="http://schemas.datacontract.org/2004/07/MSAToolBox.Legacy")]
    [System.SerializableAttribute()]
    public partial class Creature : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CurrentHealthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CurrentManaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentWaypointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DynamicFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte EquipmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MovementTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long NpcFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float OrientationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PhaseMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PositionXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PositionYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PositionZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SpawnDistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SpawnMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SpawnTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UnitFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> VerifiedBuildField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Area {
            get {
                return this.AreaField;
            }
            set {
                if ((this.AreaField.Equals(value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CurrentHealth {
            get {
                return this.CurrentHealthField;
            }
            set {
                if ((this.CurrentHealthField.Equals(value) != true)) {
                    this.CurrentHealthField = value;
                    this.RaisePropertyChanged("CurrentHealth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CurrentMana {
            get {
                return this.CurrentManaField;
            }
            set {
                if ((this.CurrentManaField.Equals(value) != true)) {
                    this.CurrentManaField = value;
                    this.RaisePropertyChanged("CurrentMana");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentWaypoint {
            get {
                return this.CurrentWaypointField;
            }
            set {
                if ((this.CurrentWaypointField.Equals(value) != true)) {
                    this.CurrentWaypointField = value;
                    this.RaisePropertyChanged("CurrentWaypoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DynamicFlags {
            get {
                return this.DynamicFlagsField;
            }
            set {
                if ((this.DynamicFlagsField.Equals(value) != true)) {
                    this.DynamicFlagsField = value;
                    this.RaisePropertyChanged("DynamicFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte EquipmentID {
            get {
                return this.EquipmentIDField;
            }
            set {
                if ((this.EquipmentIDField.Equals(value) != true)) {
                    this.EquipmentIDField = value;
                    this.RaisePropertyChanged("EquipmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Map {
            get {
                return this.MapField;
            }
            set {
                if ((this.MapField.Equals(value) != true)) {
                    this.MapField = value;
                    this.RaisePropertyChanged("Map");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Model {
            get {
                return this.ModelField;
            }
            set {
                if ((this.ModelField.Equals(value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MovementType {
            get {
                return this.MovementTypeField;
            }
            set {
                if ((this.MovementTypeField.Equals(value) != true)) {
                    this.MovementTypeField = value;
                    this.RaisePropertyChanged("MovementType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NpcFlags {
            get {
                return this.NpcFlagsField;
            }
            set {
                if ((this.NpcFlagsField.Equals(value) != true)) {
                    this.NpcFlagsField = value;
                    this.RaisePropertyChanged("NpcFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Orientation {
            get {
                return this.OrientationField;
            }
            set {
                if ((this.OrientationField.Equals(value) != true)) {
                    this.OrientationField = value;
                    this.RaisePropertyChanged("Orientation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PhaseMask {
            get {
                return this.PhaseMaskField;
            }
            set {
                if ((this.PhaseMaskField.Equals(value) != true)) {
                    this.PhaseMaskField = value;
                    this.RaisePropertyChanged("PhaseMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PositionX {
            get {
                return this.PositionXField;
            }
            set {
                if ((this.PositionXField.Equals(value) != true)) {
                    this.PositionXField = value;
                    this.RaisePropertyChanged("PositionX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PositionY {
            get {
                return this.PositionYField;
            }
            set {
                if ((this.PositionYField.Equals(value) != true)) {
                    this.PositionYField = value;
                    this.RaisePropertyChanged("PositionY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PositionZ {
            get {
                return this.PositionZField;
            }
            set {
                if ((this.PositionZField.Equals(value) != true)) {
                    this.PositionZField = value;
                    this.RaisePropertyChanged("PositionZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SpawnDistance {
            get {
                return this.SpawnDistanceField;
            }
            set {
                if ((this.SpawnDistanceField.Equals(value) != true)) {
                    this.SpawnDistanceField = value;
                    this.RaisePropertyChanged("SpawnDistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SpawnMask {
            get {
                return this.SpawnMaskField;
            }
            set {
                if ((this.SpawnMaskField.Equals(value) != true)) {
                    this.SpawnMaskField = value;
                    this.RaisePropertyChanged("SpawnMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SpawnTime {
            get {
                return this.SpawnTimeField;
            }
            set {
                if ((this.SpawnTimeField.Equals(value) != true)) {
                    this.SpawnTimeField = value;
                    this.RaisePropertyChanged("SpawnTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UnitFlags {
            get {
                return this.UnitFlagsField;
            }
            set {
                if ((this.UnitFlagsField.Equals(value) != true)) {
                    this.UnitFlagsField = value;
                    this.RaisePropertyChanged("UnitFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> VerifiedBuild {
            get {
                return this.VerifiedBuildField;
            }
            set {
                if ((this.VerifiedBuildField.Equals(value) != true)) {
                    this.VerifiedBuildField = value;
                    this.RaisePropertyChanged("VerifiedBuild");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((this.ZoneField.Equals(value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmartScript", Namespace="http://schemas.datacontract.org/2004/07/MSAToolBox.Legacy")]
    [System.SerializableAttribute()]
    public partial class SmartScript : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] ActionParamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ChanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] EventParamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventPhaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SourceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] TargetParamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float[] TargetPositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] ActionParam {
            get {
                return this.ActionParamField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionParamField, value) != true)) {
                    this.ActionParamField = value;
                    this.RaisePropertyChanged("ActionParam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Chance {
            get {
                return this.ChanceField;
            }
            set {
                if ((this.ChanceField.Equals(value) != true)) {
                    this.ChanceField = value;
                    this.RaisePropertyChanged("Chance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entry {
            get {
                return this.EntryField;
            }
            set {
                if ((this.EntryField.Equals(value) != true)) {
                    this.EntryField = value;
                    this.RaisePropertyChanged("Entry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Event {
            get {
                return this.EventField;
            }
            set {
                if ((this.EventField.Equals(value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventFlags {
            get {
                return this.EventFlagsField;
            }
            set {
                if ((this.EventFlagsField.Equals(value) != true)) {
                    this.EventFlagsField = value;
                    this.RaisePropertyChanged("EventFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] EventParam {
            get {
                return this.EventParamField;
            }
            set {
                if ((object.ReferenceEquals(this.EventParamField, value) != true)) {
                    this.EventParamField = value;
                    this.RaisePropertyChanged("EventParam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventPhase {
            get {
                return this.EventPhaseField;
            }
            set {
                if ((this.EventPhaseField.Equals(value) != true)) {
                    this.EventPhaseField = value;
                    this.RaisePropertyChanged("EventPhase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Link {
            get {
                return this.LinkField;
            }
            set {
                if ((this.LinkField.Equals(value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SourceType {
            get {
                return this.SourceTypeField;
            }
            set {
                if ((this.SourceTypeField.Equals(value) != true)) {
                    this.SourceTypeField = value;
                    this.RaisePropertyChanged("SourceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Target {
            get {
                return this.TargetField;
            }
            set {
                if ((this.TargetField.Equals(value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] TargetParam {
            get {
                return this.TargetParamField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetParamField, value) != true)) {
                    this.TargetParamField = value;
                    this.RaisePropertyChanged("TargetParam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float[] TargetPosition {
            get {
                return this.TargetPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetPositionField, value) != true)) {
                    this.TargetPositionField = value;
                    this.RaisePropertyChanged("TargetPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LegacyServices.ILegacyService")]
    public interface ILegacyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetLanguages", ReplyAction="http://tempuri.org/ILegacyService/GetLanguagesResponse")]
        System.Collections.Generic.Dictionary<int, string> GetLanguages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetLanguages", ReplyAction="http://tempuri.org/ILegacyService/GetLanguagesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetLanguagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetEmotes", ReplyAction="http://tempuri.org/ILegacyService/GetEmotesResponse")]
        System.Collections.Generic.Dictionary<int, string> GetEmotes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetEmotes", ReplyAction="http://tempuri.org/ILegacyService/GetEmotesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetEmotesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetItemTemplate", ReplyAction="http://tempuri.org/ILegacyService/GetItemTemplateResponse")]
        MSAToolBox.LegacyServices.ItemTemplate GetItemTemplate(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetItemTemplate", ReplyAction="http://tempuri.org/ILegacyService/GetItemTemplateResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.ItemTemplate> GetItemTemplateAsync(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/SaveItemTemplate", ReplyAction="http://tempuri.org/ILegacyService/SaveItemTemplateResponse")]
        MSAToolBox.LegacyServices.ItemTemplate SaveItemTemplate(MSAToolBox.LegacyServices.ItemTemplate item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/SaveItemTemplate", ReplyAction="http://tempuri.org/ILegacyService/SaveItemTemplateResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.ItemTemplate> SaveItemTemplateAsync(MSAToolBox.LegacyServices.ItemTemplate item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetDataDefines", ReplyAction="http://tempuri.org/ILegacyService/GetDataDefinesResponse")]
        MSAToolBox.LegacyServices.DataDefineStore GetDataDefines();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetDataDefines", ReplyAction="http://tempuri.org/ILegacyService/GetDataDefinesResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.DataDefineStore> GetDataDefinesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetItemList", ReplyAction="http://tempuri.org/ILegacyService/GetItemListResponse")]
        MSAToolBox.LegacyServices.ItemInfo[] GetItemList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetItemList", ReplyAction="http://tempuri.org/ILegacyService/GetItemListResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.ItemInfo[]> GetItemListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/CreateItemTemplate", ReplyAction="http://tempuri.org/ILegacyService/CreateItemTemplateResponse")]
        MSAToolBox.LegacyServices.ItemTemplate CreateItemTemplate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/CreateItemTemplate", ReplyAction="http://tempuri.org/ILegacyService/CreateItemTemplateResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.ItemTemplate> CreateItemTemplateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/DeleteItemTemplate", ReplyAction="http://tempuri.org/ILegacyService/DeleteItemTemplateResponse")]
        void DeleteItemTemplate(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/DeleteItemTemplate", ReplyAction="http://tempuri.org/ILegacyService/DeleteItemTemplateResponse")]
        System.Threading.Tasks.Task DeleteItemTemplateAsync(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/CopyItemTemplate", ReplyAction="http://tempuri.org/ILegacyService/CopyItemTemplateResponse")]
        MSAToolBox.LegacyServices.ItemTemplate CopyItemTemplate(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/CopyItemTemplate", ReplyAction="http://tempuri.org/ILegacyService/CopyItemTemplateResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.ItemTemplate> CopyItemTemplateAsync(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GenerateItemDBC", ReplyAction="http://tempuri.org/ILegacyService/GenerateItemDBCResponse")]
        MSAToolBox.LegacyServices.ItemDBC[] GenerateItemDBC();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GenerateItemDBC", ReplyAction="http://tempuri.org/ILegacyService/GenerateItemDBCResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.ItemDBC[]> GenerateItemDBCAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetGossipMenu", ReplyAction="http://tempuri.org/ILegacyService/GetGossipMenuResponse")]
        MSAToolBox.LegacyServices.GossipMenu GetGossipMenu(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetGossipMenu", ReplyAction="http://tempuri.org/ILegacyService/GetGossipMenuResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.GossipMenu> GetGossipMenuAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetGossipMenuOptionTypes", ReplyAction="http://tempuri.org/ILegacyService/GetGossipMenuOptionTypesResponse")]
        System.Collections.Generic.Dictionary<int, string> GetGossipMenuOptionTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetGossipMenuOptionTypes", ReplyAction="http://tempuri.org/ILegacyService/GetGossipMenuOptionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetGossipMenuOptionTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/SaveGossipMenu", ReplyAction="http://tempuri.org/ILegacyService/SaveGossipMenuResponse")]
        MSAToolBox.LegacyServices.GossipMenu SaveGossipMenu(MSAToolBox.LegacyServices.GossipMenu menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/SaveGossipMenu", ReplyAction="http://tempuri.org/ILegacyService/SaveGossipMenuResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.GossipMenu> SaveGossipMenuAsync(MSAToolBox.LegacyServices.GossipMenu menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/CreateNewGossipMenu", ReplyAction="http://tempuri.org/ILegacyService/CreateNewGossipMenuResponse")]
        MSAToolBox.LegacyServices.GossipMenu CreateNewGossipMenu();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/CreateNewGossipMenu", ReplyAction="http://tempuri.org/ILegacyService/CreateNewGossipMenuResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.GossipMenu> CreateNewGossipMenuAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetOrCreateCreatureGossipID", ReplyAction="http://tempuri.org/ILegacyService/GetOrCreateCreatureGossipIDResponse")]
        int GetOrCreateCreatureGossipID(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetOrCreateCreatureGossipID", ReplyAction="http://tempuri.org/ILegacyService/GetOrCreateCreatureGossipIDResponse")]
        System.Threading.Tasks.Task<int> GetOrCreateCreatureGossipIDAsync(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetCreatureNames", ReplyAction="http://tempuri.org/ILegacyService/GetCreatureNamesResponse")]
        System.Collections.Generic.Dictionary<int, string> GetCreatureNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetCreatureNames", ReplyAction="http://tempuri.org/ILegacyService/GetCreatureNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetCreatureNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetVendorList", ReplyAction="http://tempuri.org/ILegacyService/GetVendorListResponse")]
        MSAToolBox.LegacyServices.VendorInfo[] GetVendorList(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetVendorList", ReplyAction="http://tempuri.org/ILegacyService/GetVendorListResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.VendorInfo[]> GetVendorListAsync(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/SaveVendorList", ReplyAction="http://tempuri.org/ILegacyService/SaveVendorListResponse")]
        bool SaveVendorList(int entry, MSAToolBox.LegacyServices.VendorInfo[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/SaveVendorList", ReplyAction="http://tempuri.org/ILegacyService/SaveVendorListResponse")]
        System.Threading.Tasks.Task<bool> SaveVendorListAsync(int entry, MSAToolBox.LegacyServices.VendorInfo[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetCreatureTemplate", ReplyAction="http://tempuri.org/ILegacyService/GetCreatureTemplateResponse")]
        MSAToolBox.LegacyServices.CreatureTemplate GetCreatureTemplate(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetCreatureTemplate", ReplyAction="http://tempuri.org/ILegacyService/GetCreatureTemplateResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.CreatureTemplate> GetCreatureTemplateAsync(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/SaveCreatureTemplate", ReplyAction="http://tempuri.org/ILegacyService/SaveCreatureTemplateResponse")]
        MSAToolBox.LegacyServices.CreatureTemplate SaveCreatureTemplate(MSAToolBox.LegacyServices.CreatureTemplate creature);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/SaveCreatureTemplate", ReplyAction="http://tempuri.org/ILegacyService/SaveCreatureTemplateResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.CreatureTemplate> SaveCreatureTemplateAsync(MSAToolBox.LegacyServices.CreatureTemplate creature);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetCreatureList", ReplyAction="http://tempuri.org/ILegacyService/GetCreatureListResponse")]
        MSAToolBox.LegacyServices.CreatureInfo[] GetCreatureList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetCreatureList", ReplyAction="http://tempuri.org/ILegacyService/GetCreatureListResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.CreatureInfo[]> GetCreatureListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/DeleteCreatureTemplate", ReplyAction="http://tempuri.org/ILegacyService/DeleteCreatureTemplateResponse")]
        void DeleteCreatureTemplate(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/DeleteCreatureTemplate", ReplyAction="http://tempuri.org/ILegacyService/DeleteCreatureTemplateResponse")]
        System.Threading.Tasks.Task DeleteCreatureTemplateAsync(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetSpawnInfo", ReplyAction="http://tempuri.org/ILegacyService/GetSpawnInfoResponse")]
        MSAToolBox.LegacyServices.Creature[] GetSpawnInfo(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetSpawnInfo", ReplyAction="http://tempuri.org/ILegacyService/GetSpawnInfoResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.Creature[]> GetSpawnInfoAsync(int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/SaveSpawnInfo", ReplyAction="http://tempuri.org/ILegacyService/SaveSpawnInfoResponse")]
        void SaveSpawnInfo(int entry, MSAToolBox.LegacyServices.Creature[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/SaveSpawnInfo", ReplyAction="http://tempuri.org/ILegacyService/SaveSpawnInfoResponse")]
        System.Threading.Tasks.Task SaveSpawnInfoAsync(int entry, MSAToolBox.LegacyServices.Creature[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetSmartScript", ReplyAction="http://tempuri.org/ILegacyService/GetSmartScriptResponse")]
        MSAToolBox.LegacyServices.SmartScript[] GetSmartScript(int type, int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/GetSmartScript", ReplyAction="http://tempuri.org/ILegacyService/GetSmartScriptResponse")]
        System.Threading.Tasks.Task<MSAToolBox.LegacyServices.SmartScript[]> GetSmartScriptAsync(int type, int entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/SaveSmartScript", ReplyAction="http://tempuri.org/ILegacyService/SaveSmartScriptResponse")]
        void SaveSmartScript(MSAToolBox.LegacyServices.SmartScript[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegacyService/SaveSmartScript", ReplyAction="http://tempuri.org/ILegacyService/SaveSmartScriptResponse")]
        System.Threading.Tasks.Task SaveSmartScriptAsync(MSAToolBox.LegacyServices.SmartScript[] list);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILegacyServiceChannel : MSAToolBox.LegacyServices.ILegacyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LegacyServiceClient : System.ServiceModel.ClientBase<MSAToolBox.LegacyServices.ILegacyService>, MSAToolBox.LegacyServices.ILegacyService {
        
        public LegacyServiceClient() {
        }
        
        public LegacyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LegacyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LegacyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LegacyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetLanguages() {
            return base.Channel.GetLanguages();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetLanguagesAsync() {
            return base.Channel.GetLanguagesAsync();
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetEmotes() {
            return base.Channel.GetEmotes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetEmotesAsync() {
            return base.Channel.GetEmotesAsync();
        }
        
        public MSAToolBox.LegacyServices.ItemTemplate GetItemTemplate(int entry) {
            return base.Channel.GetItemTemplate(entry);
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.ItemTemplate> GetItemTemplateAsync(int entry) {
            return base.Channel.GetItemTemplateAsync(entry);
        }
        
        public MSAToolBox.LegacyServices.ItemTemplate SaveItemTemplate(MSAToolBox.LegacyServices.ItemTemplate item) {
            return base.Channel.SaveItemTemplate(item);
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.ItemTemplate> SaveItemTemplateAsync(MSAToolBox.LegacyServices.ItemTemplate item) {
            return base.Channel.SaveItemTemplateAsync(item);
        }
        
        public MSAToolBox.LegacyServices.DataDefineStore GetDataDefines() {
            return base.Channel.GetDataDefines();
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.DataDefineStore> GetDataDefinesAsync() {
            return base.Channel.GetDataDefinesAsync();
        }
        
        public MSAToolBox.LegacyServices.ItemInfo[] GetItemList() {
            return base.Channel.GetItemList();
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.ItemInfo[]> GetItemListAsync() {
            return base.Channel.GetItemListAsync();
        }
        
        public MSAToolBox.LegacyServices.ItemTemplate CreateItemTemplate() {
            return base.Channel.CreateItemTemplate();
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.ItemTemplate> CreateItemTemplateAsync() {
            return base.Channel.CreateItemTemplateAsync();
        }
        
        public void DeleteItemTemplate(int entry) {
            base.Channel.DeleteItemTemplate(entry);
        }
        
        public System.Threading.Tasks.Task DeleteItemTemplateAsync(int entry) {
            return base.Channel.DeleteItemTemplateAsync(entry);
        }
        
        public MSAToolBox.LegacyServices.ItemTemplate CopyItemTemplate(int entry) {
            return base.Channel.CopyItemTemplate(entry);
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.ItemTemplate> CopyItemTemplateAsync(int entry) {
            return base.Channel.CopyItemTemplateAsync(entry);
        }
        
        public MSAToolBox.LegacyServices.ItemDBC[] GenerateItemDBC() {
            return base.Channel.GenerateItemDBC();
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.ItemDBC[]> GenerateItemDBCAsync() {
            return base.Channel.GenerateItemDBCAsync();
        }
        
        public MSAToolBox.LegacyServices.GossipMenu GetGossipMenu(int id) {
            return base.Channel.GetGossipMenu(id);
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.GossipMenu> GetGossipMenuAsync(int id) {
            return base.Channel.GetGossipMenuAsync(id);
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetGossipMenuOptionTypes() {
            return base.Channel.GetGossipMenuOptionTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetGossipMenuOptionTypesAsync() {
            return base.Channel.GetGossipMenuOptionTypesAsync();
        }
        
        public MSAToolBox.LegacyServices.GossipMenu SaveGossipMenu(MSAToolBox.LegacyServices.GossipMenu menu) {
            return base.Channel.SaveGossipMenu(menu);
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.GossipMenu> SaveGossipMenuAsync(MSAToolBox.LegacyServices.GossipMenu menu) {
            return base.Channel.SaveGossipMenuAsync(menu);
        }
        
        public MSAToolBox.LegacyServices.GossipMenu CreateNewGossipMenu() {
            return base.Channel.CreateNewGossipMenu();
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.GossipMenu> CreateNewGossipMenuAsync() {
            return base.Channel.CreateNewGossipMenuAsync();
        }
        
        public int GetOrCreateCreatureGossipID(int entry) {
            return base.Channel.GetOrCreateCreatureGossipID(entry);
        }
        
        public System.Threading.Tasks.Task<int> GetOrCreateCreatureGossipIDAsync(int entry) {
            return base.Channel.GetOrCreateCreatureGossipIDAsync(entry);
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetCreatureNames() {
            return base.Channel.GetCreatureNames();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetCreatureNamesAsync() {
            return base.Channel.GetCreatureNamesAsync();
        }
        
        public MSAToolBox.LegacyServices.VendorInfo[] GetVendorList(int entry) {
            return base.Channel.GetVendorList(entry);
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.VendorInfo[]> GetVendorListAsync(int entry) {
            return base.Channel.GetVendorListAsync(entry);
        }
        
        public bool SaveVendorList(int entry, MSAToolBox.LegacyServices.VendorInfo[] list) {
            return base.Channel.SaveVendorList(entry, list);
        }
        
        public System.Threading.Tasks.Task<bool> SaveVendorListAsync(int entry, MSAToolBox.LegacyServices.VendorInfo[] list) {
            return base.Channel.SaveVendorListAsync(entry, list);
        }
        
        public MSAToolBox.LegacyServices.CreatureTemplate GetCreatureTemplate(int entry) {
            return base.Channel.GetCreatureTemplate(entry);
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.CreatureTemplate> GetCreatureTemplateAsync(int entry) {
            return base.Channel.GetCreatureTemplateAsync(entry);
        }
        
        public MSAToolBox.LegacyServices.CreatureTemplate SaveCreatureTemplate(MSAToolBox.LegacyServices.CreatureTemplate creature) {
            return base.Channel.SaveCreatureTemplate(creature);
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.CreatureTemplate> SaveCreatureTemplateAsync(MSAToolBox.LegacyServices.CreatureTemplate creature) {
            return base.Channel.SaveCreatureTemplateAsync(creature);
        }
        
        public MSAToolBox.LegacyServices.CreatureInfo[] GetCreatureList() {
            return base.Channel.GetCreatureList();
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.CreatureInfo[]> GetCreatureListAsync() {
            return base.Channel.GetCreatureListAsync();
        }
        
        public void DeleteCreatureTemplate(int entry) {
            base.Channel.DeleteCreatureTemplate(entry);
        }
        
        public System.Threading.Tasks.Task DeleteCreatureTemplateAsync(int entry) {
            return base.Channel.DeleteCreatureTemplateAsync(entry);
        }
        
        public MSAToolBox.LegacyServices.Creature[] GetSpawnInfo(int entry) {
            return base.Channel.GetSpawnInfo(entry);
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.Creature[]> GetSpawnInfoAsync(int entry) {
            return base.Channel.GetSpawnInfoAsync(entry);
        }
        
        public void SaveSpawnInfo(int entry, MSAToolBox.LegacyServices.Creature[] list) {
            base.Channel.SaveSpawnInfo(entry, list);
        }
        
        public System.Threading.Tasks.Task SaveSpawnInfoAsync(int entry, MSAToolBox.LegacyServices.Creature[] list) {
            return base.Channel.SaveSpawnInfoAsync(entry, list);
        }
        
        public MSAToolBox.LegacyServices.SmartScript[] GetSmartScript(int type, int entry) {
            return base.Channel.GetSmartScript(type, entry);
        }
        
        public System.Threading.Tasks.Task<MSAToolBox.LegacyServices.SmartScript[]> GetSmartScriptAsync(int type, int entry) {
            return base.Channel.GetSmartScriptAsync(type, entry);
        }
        
        public void SaveSmartScript(MSAToolBox.LegacyServices.SmartScript[] list) {
            base.Channel.SaveSmartScript(list);
        }
        
        public System.Threading.Tasks.Task SaveSmartScriptAsync(MSAToolBox.LegacyServices.SmartScript[] list) {
            return base.Channel.SaveSmartScriptAsync(list);
        }
    }
}
